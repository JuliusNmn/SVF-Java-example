plugins {
    id 'java-library'
    id 'org.bytedeco.gradle-javacpp-build' version '1.5.7'
}

group 'org.svf'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    api "org.bytedeco:javacpp:$javacppVersion"
    javacppPlatform "org.bytedeco:javacpp-platform:$javacppVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly "org.bytedeco:javacpp:$javacppVersion:$javacppPlatform"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.32'
}

test {
    useJUnitPlatform()
}

task setNodeModulesDir {
    exec {
        executable = 'npm'
        args = ['root', '-g']
        standardOutput = new ByteArrayOutputStream()

        ext.output = {
            return standardOutput.toString().trim()
        }
    }
}

task runDemo(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.svf.example.console.Demo"
}

tasks.withType(org.bytedeco.gradle.javacpp.BuildTask) {
    dependsOn setNodeModulesDir
    var nodeModulesDir = setNodeModulesDir.output()

    includePath = [
            "$nodeModulesDir/SVF/llvm-13.0.0.obj/include",
            "$nodeModulesDir/SVF/include",
            "$nodeModulesDir/SVF/z3.obj/include"
    ]
    linkPath = [
            "$nodeModulesDir/SVF/Release-build/lib",
            "$nodeModulesDir/SVF/Release-build/lib/cudd",
            "$nodeModulesDir/SVF/llvm-13.0.0.obj/lib",
            "$nodeModulesDir/SVF/z3.obj/bin"
    ]
    copyLibs = true
    compilerOptions = ['-std=c++14', '-lcurses']
}

javacppBuildCommand {
}

javacppBuildParser {
    classOrPackageNames = ['org.svf.lib.*']
    outputDirectory = file("$buildDir/generated/sources/javacpp/")
}

javacppBuildCompiler {
    classOrPackageNames = ['org.svf.lib.*']
}
